---
import ReactIcon from '../components/icons/ReactIcon.astro'
import TailwindIcon from '../components/icons/TailwindIcon.astro'
import StyledComponentsIcon from '../components/icons/StyledComponentsIcon.astro'
import CssIcon from '../components/icons/CssIcon.astro'
import JavascriptIcon from '../components/icons/JavascriptIcon.astro'
import AstroIcon from '../components/icons/AstroIcon.astro'
import NextIcon from '../components/icons/NextIcon.astro'
import CIcon from '../components/icons/CIcon.astro'
const TAGS = {
    REACT: {
        name: 'React JS',
        class: 'bg-sky-700 text-white',
        icon: ReactIcon
    },
    TAILWIND: {
        name: 'Tailwind CSS',
        class: 'bg-[#003159] text-white',
        icon: TailwindIcon
    },
    STYLED: {
        name: 'Styled Components',
        class: 'bg-red-900 text-white',
        icon: StyledComponentsIcon
    },
    CSS: {
        name: 'CSS',
        class: 'bg-[#003159] text-white',
        icon: CssIcon
    },
    JAVASCRIPT: {
        name: 'JavaScript',
        class: 'bg-[#323330] text-white',
        icon: JavascriptIcon
    },
    ASTRO: {
        name: 'Astro',
        class: 'bg-[#6734eb] text-white',
        icon: AstroIcon
    },
    NEXT: {
        name: 'Next JS',
        class: 'bg-[#323330] text-white',
        icon: NextIcon
    },
    C: {
        name: 'C',
        class: 'bg-[#4a5aed] text-white',
        icon: CIcon
    }

}

const PROJECTS = [
    {   image: '/projects/presupuesto-screen.webp',
        title: 'Control de Presupuesto',
        tags: [TAGS.REACT, TAGS.CSS],
        description: 'Proyecto hecho en React y estilizado con CSS sobre un control de presupuesto. En el proyecto se hace uso del ReactDOM, useState, useEffect y una pantalla Modal para agregar nuevos gastos.',
        link: 'https://famous-eclair-006468.netlify.app',
        github: '#',
    },
    {
        image: '/projects/cotizador-screen.webp',
        title: 'Cotizador De Criptomonedas con API',
        tags: [TAGS.REACT, TAGS.STYLED],
        description: 'Proyecto hecho en React y estilizado con Styled Components sobre un cotizador de criptomonedas, cuyos valores se obtienen comunicandose con la API de CryptoCompare. Para el proyecto se utilizó useState, useEffect, y se crearon hooks propios.',
        link: "https://admirable-granita-1aece2.netlify.app",
        github: '#',
    },
    {
        image: '/projects/citas-screen.webp',
        title: 'Administrador de citas de clientes',
        tags: [TAGS.REACT, TAGS.TAILWIND],
        description: 'Proyecto hecho en React y estilizado con TailwindCSS sobre un simulador de sistema para clientes de una veterinaria, con opciones de agregar, editar o eliminar citas. En el proyecto se nota el uso del useState y el useEffect.',
        link: 'https://creative-unicorn-d53737.netlify.app/',
        github: '#',
    },
    {
        image: '/projects/commerce-screen.webp',
        title: 'Practica de E-commerce con carrito',
        tags: [TAGS.JAVASCRIPT, TAGS.CSS],
        description: 'Proyecto hecho con HTML, CSS y JavaScript Vanilla. Proyecto de práctica sobre un ejemplo de página E-commerce, con carrito de compras funcional, cards de productos y entrada de blogs.',
        link: 'https://elegant-lamington-c89910.netlify.app',
        github: '#',
    },

]

---


<div class="flex flex-col gap-y-16">
    {
      PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
    <div class="w-full md:w-1/2">
      <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8  ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl  md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
        <img alt="Imagen del proyecto" class="object-cover  w-full h-60   sm:h-full  " loading="lazy" src={image} />
      </div>
    </div>
  
    <div class="w-full md:w-1/2 md:max-w-lg">
        <h3 class="text-2xl font-semibold text-green-400 mb-2 "> <a href={link}>{title}</a> </h3>
      
      <div class="flex flex-wrap mt-2">
        <ul class="flex flex-row mb-2 gap-x-2">
            {tags.map((tag) => (
              <li>
                <span
                  class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                >
                  <tag.icon class="size-4" />
                  {tag.name}
                </span>
              </li>
            ))}
          </ul>
  
        <div class="mt-2 ">{description}</div>
        
      </div>
    </div>
  </article>
      ))
    }
  </div>